---
- name: Common setup
  hosts: all
  become: yes
  roles:
    - roles/common

- name: Master setup
  hosts: master
  become: yes
  roles:
    - roles/master

- name: Slave setup
  hosts: slaves
  become: yes
  roles:
    - roles/slave

- name: Install latest Helm on all nodes
  hosts: all
  become: true
  vars:
    helm_version: "v3.14.4"
  tasks:
    - name: Download Helm binary
      get_url:
        url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
        dest: /tmp/helm.tar.gz
        mode: '0644'

    - name: Extract Helm binary
      unarchive:
        src: /tmp/helm.tar.gz
        dest: /tmp/
        remote_src: yes
        creates: /tmp/linux-amd64/helm

    - name: Move Helm binary to /usr/local/bin
      copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin/helm
        mode: '0755'
        remote_src: yes

    - name: Verify Helm installation
      command: helm version
      register: helm_output

    - name: Show Helm version
      debug:
        msg: "{{ helm_output.stdout }}"


- name: Deploy frontend and backend charts from master node
  hosts: master
  become: true
  tasks:
    - name: Ensure namespace exists using kubectl
      shell: |
        kubectl get namespace myapp || kubectl create namespace myapp
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Copy Helm charts to master node
      ansible.builtin.copy:
        src: ./helm/
        dest: /home/ubuntu/helm/
        mode: '0755'


    - name: Deploy backend Helm chart
      shell: >
        helm upgrade --install backend ./helm/backend
        --namespace myapp
      args:
        chdir: /home/ubuntu
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Deploy frontend Helm chart
      shell: >
        helm upgrade --install frontend ./helm/frontend
        --namespace myapp
      args:
        chdir: /home/ubuntu
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf



